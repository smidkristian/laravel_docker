version: '3'

networks:
  laravel:

services:

  nginx:
    image: 'nginx:stable-alpine'
    container_name: nginx
    ports:
      - '8088:80'
    volumes:
      - './api:/var/www/html'
      - './nginx/default.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - '4306:3306'
    volumes:
      - './mysql:/var/lib/mysql'
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - './api:/var/www/html'
    working_dir: /var/www/html
    ports:
      - '9000:9000'
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes: 
      - ./api:/var/www/html
    depends_on: 
      - mysql
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/artisan']
    networks: 
      - laravel
  
  npm: 
    image: node
    container_name: npm
    volumes:
      - ./api:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  composer:
    image: composer
    container_name: composer
    volumes:
      - ./api:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    ports:
      - '4000:80'
    depends_on: 
      - mysql
    environment:
      - PMA_HOST=mysql
    networks: 
      - laravel

  